/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.webspeclanguage.expression.parser.node;

import org.webspeclanguage.expression.parser.analysis.*;

@SuppressWarnings("nls")
public final class ASimplewidgetWidgetOrWidgetAccess extends PWidgetOrWidgetAccess
{
    private TIdentifier _widget_;

    public ASimplewidgetWidgetOrWidgetAccess()
    {
        // Constructor
    }

    public ASimplewidgetWidgetOrWidgetAccess(
        @SuppressWarnings("hiding") TIdentifier _widget_)
    {
        // Constructor
        setWidget(_widget_);

    }

    @Override
    public Object clone()
    {
        return new ASimplewidgetWidgetOrWidgetAccess(
            cloneNode(this._widget_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimplewidgetWidgetOrWidgetAccess(this);
    }

    public TIdentifier getWidget()
    {
        return this._widget_;
    }

    public void setWidget(TIdentifier node)
    {
        if(this._widget_ != null)
        {
            this._widget_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._widget_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._widget_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._widget_ == child)
        {
            this._widget_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._widget_ == oldChild)
        {
            setWidget((TIdentifier) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
