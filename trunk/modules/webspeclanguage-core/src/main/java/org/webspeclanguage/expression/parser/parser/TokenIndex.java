/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.webspeclanguage.expression.parser.parser;

import org.webspeclanguage.expression.parser.node.*;
import org.webspeclanguage.expression.parser.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTStringType(@SuppressWarnings("unused") TStringType node)
    {
        this.index = 0;
    }

    @Override
    public void caseTNumberType(@SuppressWarnings("unused") TNumberType node)
    {
        this.index = 1;
    }

    @Override
    public void caseTBooleanType(@SuppressWarnings("unused") TBooleanType node)
    {
        this.index = 2;
    }

    @Override
    public void caseTAdd(@SuppressWarnings("unused") TAdd node)
    {
        this.index = 3;
    }

    @Override
    public void caseTSub(@SuppressWarnings("unused") TSub node)
    {
        this.index = 4;
    }

    @Override
    public void caseTMul(@SuppressWarnings("unused") TMul node)
    {
        this.index = 5;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 6;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 7;
    }

    @Override
    public void caseTLeftBrace(@SuppressWarnings("unused") TLeftBrace node)
    {
        this.index = 8;
    }

    @Override
    public void caseTRightBrace(@SuppressWarnings("unused") TRightBrace node)
    {
        this.index = 9;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 10;
    }

    @Override
    public void caseTGreaterEqual(@SuppressWarnings("unused") TGreaterEqual node)
    {
        this.index = 11;
    }

    @Override
    public void caseTNotEqual(@SuppressWarnings("unused") TNotEqual node)
    {
        this.index = 12;
    }

    @Override
    public void caseTEqual(@SuppressWarnings("unused") TEqual node)
    {
        this.index = 13;
    }

    @Override
    public void caseTLower(@SuppressWarnings("unused") TLower node)
    {
        this.index = 14;
    }

    @Override
    public void caseTLowerEqual(@SuppressWarnings("unused") TLowerEqual node)
    {
        this.index = 15;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 16;
    }

    @Override
    public void caseTImplies(@SuppressWarnings("unused") TImplies node)
    {
        this.index = 17;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 18;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 19;
    }

    @Override
    public void caseTConcat(@SuppressWarnings("unused") TConcat node)
    {
        this.index = 20;
    }

    @Override
    public void caseTLeftParen(@SuppressWarnings("unused") TLeftParen node)
    {
        this.index = 21;
    }

    @Override
    public void caseTRightParen(@SuppressWarnings("unused") TRightParen node)
    {
        this.index = 22;
    }

    @Override
    public void caseTNumber(@SuppressWarnings("unused") TNumber node)
    {
        this.index = 23;
    }

    @Override
    public void caseTArrayIndex(@SuppressWarnings("unused") TArrayIndex node)
    {
        this.index = 24;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 25;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 26;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 27;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 28;
    }

    @Override
    public void caseTPoint(@SuppressWarnings("unused") TPoint node)
    {
        this.index = 29;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 30;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 31;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 32;
    }

    @Override
    public void caseTLeftBlock(@SuppressWarnings("unused") TLeftBlock node)
    {
        this.index = 33;
    }

    @Override
    public void caseTRightBlock(@SuppressWarnings("unused") TRightBlock node)
    {
        this.index = 34;
    }

    @Override
    public void caseTPercent(@SuppressWarnings("unused") TPercent node)
    {
        this.index = 35;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 36;
    }
}
